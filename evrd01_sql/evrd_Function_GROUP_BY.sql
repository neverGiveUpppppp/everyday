/*

그룹함수으로 묶을 기준을 제안하는 것
그룹함수가 적용될 그룹 기술

    GROUP BY에 들어갈 수 있는 값 : 그룹으로 사용할 컬럼, 집계함수
    (=단일컬럼, 단일행 함수 사용 불가)   

cf.집계함수(Aggregate Function) : COUNT, AVG, SUM, MAX, MIN


*/

SELECT DEPT_CODE
FROM EMPLOYEE
GROUP BY DEPT_CODE
ORDER BY DEPT_CODE ASC;

SELECT DEPT_CODE
FROM EMPLOYEE
GROUP BY DEPT_CODE
--HAVING DEPT_CODE IN(D1,D2,D3) -- ORA-00904: "D3": 부적합한 식별자
ORDER BY DEPT_CODE ASC;

SELECT SALARY, MIN(SALARY),MAX(SALARY)
FROM EMPLOYEE
GROUP BY SALARY;

SELECT SALARY, MIN(SALARY),MAX(SALARY)
FROM EMPLOYEE
GROUP BY SALARY
HAVING SALARY > 3000000;

SELECT SALARY, MIN(SALARY),MAX(SALARY), AVG(SALARY)
FROM EMPLOYEE
GROUP BY SALARY
HAVING AVG(SALARY) > 3000000;

SELECT JOB_CODE -- , INSTR(JOB_NAME,'장')  -- ORA-00979: GROUP BY 표현식이 아닙니다.
FROM JOB J
GROUP BY JOB_CODE;

SELECT JOB_CODE, SUBSTR(JOB_NAME,0)  -- ORA-00979: GROUP BY 표현식이 아닙니다.
FROM JOB J
GROUP BY JOB_CODE;

-- 개인정보보호를 위한 이름 마스킹하기
SELECT SUBSTR(EMP_NAME,0,1)
FROM EMPLOYEE;
SELECT CONCAT(SUBSTR(EMP_NAME,0,1),'**') 
FROM EMPLOYEE;

-- 욕설 필터링
SELECT REPLACE(EMP_NAME,'동','바꾸기')
FROM EMPLOYEE;
-- 연봉 마스킹
SELECT EMP_NAME, REPLACE(SALARY,SUBSTR(SALARY,0,3),'***')
FROM EMPLOYEE
WHERE SALARY >= 3000000;