/*
    JOIN
1)오라클 전용구문
2)ANSI 표준구문
    
1.내부 조인(INNER JOIN)
    JOIN + ON : 두 데이터값이 다른 이름일 때
    JOIN + USING : 두 데이터값이 같은 이름일 때
         but, 이름이 같더라도 JOIN + ON 사용가능

2.외부 조인(OUTER JOIN)
    1)오라클구문 : 맞춰주는 테이블(기준이 아닌 테이블)의 컬럼 쪽에 (+)
    2)ANSI 표준구문 : LEFT, RIGHT JOIN
        LEFT OUTER JOIN
        RIGHT OUTER JOIN
        FULL OUTER JOIN : 양쪽 다 기준
            (OUTER)는 생략 가능


*/


--


-- 오라클 INNER JOIN 구문
SELECT EMP_ID, EMP_NAME, EMP_NO
FROM EMPLOYEE A, JOB B
WHERE A.JOB_CODE = B.JOB_CODE;

-- ANSI 표준 구문 : ON
SELECT EMP_ID, EMP_NAME, EMP_NO
FROM EMPLOYEE A
    JOIN JOB B ON(A.JOB_CODE = B.JOB_CODE);
    
-- ANSI 표준 구문 : USING
SELECT EMP_ID 사원번호, EMP_NAME 사원명, EMP_NO 주번
FROM EMPLOYEE A
    JOIN JOB B USING(JOB_CODE);


-- 사번, 사원명, 직급코드, 직급명 // 각 사원에 대한 직급명 조회
------ 오라클 전용 구문
------ ANSI 표준 구문
SELECT EMP_ID 사번, EMP_NAME 사원명, E.JOB_CODE 직급코드, JOB_NAME 직급명
FROM EMPLOYEE E, JOB J
WHERE E.JOB_CODE = J.JOB_CODE;

SELECT EMP_ID 사번, EMP_NAME 사원명, JOB.JOB_CODE 직급코드, JOB_NAME 직급명
FROM EMPLOYEE EMP
    JOIN JOB JOB ON (EMP.JOB_CODE = JOB.JOB_CODE);

-- INNER JOIN 3중
SELECT EMP_ID, EMP_NAME, DEPT.LOCATION_ID, LOCATN.LOCAL_NAME
FROM EMPLOYEE EMP
    JOIN DEPARTMENT DEPT ON (EMP.DEPT_CODE = DEPT.DEPT_ID)
    JOIN LOCATION LOCATN ON (DEPT.LOCATION_ID = LOCATN.LOCAL_CODE);
    
SELECT EMP_ID, EMP_NAME, DEPT.LOCATION_ID, LOCATN.LOCAL_NAME
FROM EMPLOYEE EMP, DEPARTMENT DEPT, LOCATION LOCATN
WHERE EMP.DEPT_CODE = DEPT.DEPT_ID
    AND DEPT.LOCATION_ID = LOCATN.LOCAL_CODE;


-- INNER+LEFT JOIN 3중
SELECT DEPT.LOCATION_ID, LOCATN.LOCAL_NAME, EMP.*
FROM EMPLOYEE EMP
    LEFT JOIN DEPARTMENT DEPT ON (EMP.DEPT_CODE = DEPT.DEPT_ID)
    JOIN LOCATION LOCATN ON (DEPT.LOCATION_ID = LOCATN.LOCAL_CODE);    
SELECT DEPT.LOCATION_ID, LOCATN.LOCAL_NAME, EMP_ID, EMP_NAME, LOCATN.*
FROM EMPLOYEE EMP
    LEFT JOIN DEPARTMENT DEPT ON (EMP.DEPT_CODE = DEPT.DEPT_ID)
    JOIN LOCATION LOCATN ON (DEPT.LOCATION_ID = LOCATN.LOCAL_CODE);       

SELECT LOC.NATIONAL_CODE, LOCAL_NAME, NATIONAL_NAME
FROM LOCATION LOC
    JOIN NATIONAL NATION ON(LOC.NATIONAL_CODE = NATION.NATIONAL_CODE)
WHERE LOC.NATIONAL_CODE = 'KO';    
SELECT NATIONAL_CODE, LOCAL_NAME, NATIONAL_NAME
FROM LOCATION 
    JOIN NATIONAL USING(NATIONAL_CODE); -- USING 쓸려면 테이블에 별칭 없어야 가능

SELECT LOCATN.NATIONAL_CODE, LOCAL_NAME, NATIONAL_NAME
FROM LOCATION LOCATN, NATIONAL NATNL
WHERE LOCATN.NATIONAL_CODE(+) = NATNL.NATIONAL_CODE
    AND LOCATN.NATIONAL_CODE = 'KO';
    
-- Q. 
-- 3중 조인할 때 1번 테이블 2번 테이블 3번 테이블의 3개 전부 공통인지 1-2 링크 2-3링크고 1-3은 공통점이 없어도 되는지?    
    
    
-- LEFT JOIN
SELECT EMP_NAME, DEPT_TITLE
FROM EMPLOYEE, DEPARTMENT
WHERE DEPT_CODE =  DEPT_ID(+);

SELECT EMP_NAME, DEPT_TITLE
FROM EMPLOYEE E
    LEFT JOIN DEPARTMENT D ON(E.DEPT_CODE = D.DEPT_ID); -- 23행 : 22,23에 NULL값 데이터 추가
        
SELECT EMP_NAME, DEPT_TITLE
FROM EMPLOYEE E
    JOIN DEPARTMENT D ON(E.DEPT_CODE = D.DEPT_ID); -- 21행
    
SELECT EMP_ID, EMP_NAME, DEPT_TITLE
FROM EMPLOYEE E, DEPARTMENT D
WHERE E.DEPT_CODE(+) = D.DEPT_ID;

SELECT EMP_ID, EMP_NAME, DEPT_TITLE
FROM EMPLOYEE E
    RIGHT OUTER JOIN DEPARTMENT D ON(E.DEPT_CODE = D.DEPT_ID);
    
SELECT EMP_ID, EMP_NAME, DEPT_TITLE
FROM EMPLOYEE E
    JOIN DEPARTMENT D ON(E.DEPT_CODE = D.DEPT_ID);
        
-- RIGHT JOIN
SELECT EMP_ID 사번, EMP_NAME 사원명, EMP.SAL_LEVEL, MIN_SAL
FROM EMPLOYEE EMP
    RIGHT OUTER JOIN SAL_GRADE SAL ON(EMP.SAL_LEVEL = SAL.SAL_LEVEL);
    
SELECT EMP_ID 사번, EMP_NAME 사원명, EMP.SAL_LEVEL 연봉등급, MIN_SAL 최저연봉
FROM EMPLOYEE EMP, SAL_GRADE SAL
WHERE EMP.SAL_LEVEL(+) = SAL.SAL_LEVEL;